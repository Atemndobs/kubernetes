apiVersion: apps/v1
kind: List
metadata:
  name: curator-app
  labels:
    app.kubernetes.io/name: curator-app
    app.kubernetes.io/instance: curator-app
    helm.sh/chart: {{ include "curator-app.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
items:
  - apiVersion: v1
    kind: Service
    metadata:
      name: curator-app
      labels:
        app.kubernetes.io/name: curator-app
        app.kubernetes.io/instance: curator-app
      namespace: curator
    spec:
      selector:
        app: curator-app
        app.kubernetes.io/name: curator-app
        app.kubernetes.io/instance: curator-app
      ports:
        - name: http
          protocol: TCP
          port: 8080
          targetPort: 8080
      type: ClusterIP

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: curator-app
      labels:
        app.kubernetes.io/name: curator-app
        app.kubernetes.io/instance: curator-app
      namespace: curator
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: curator-app
      template:
        metadata:
          labels:
            app: curator-app
            app.kubernetes.io/name: curator-app
            app.kubernetes.io/instance: curator-app
        spec:
          containers:
          - command:
            - sh
            - -c
            - pm2 start 'serve -s dist' --name vue --no-daemon && pm2 logs vue
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: Always
            name: curator-app
            ports:
            - containerPort: 8080