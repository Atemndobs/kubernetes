apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "directus.fullname" . }}
  labels:
    app: {{ template "directus.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "directus.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.config.updateStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "directus.name" . }}
        release: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.persistence.enabled | ternary "91" "89" }}
              preference:
                matchExpressions:
                  - key: application/state
                    operator: In
                    values:
                      - {{ .Values.persistence.enabled | ternary "stateful" "stateless" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "directus.name" . }}
      containers:
        - name: {{ template "directus.fullname" . }}
          image: {{ .Values.images.directus.repository }}:{{ .Values.images.directus.tag }}
          imagePullPolicy: {{ .Values.config.imagePullPolicy }}
          ports:
            - name: container
              containerPort: 8055
          volumeMounts:
            - name: data
              mountPath: /_data
          env:
            - name: DB_CLIENT
              value: sqlite
            - name: LOG_LEVEL
              value: debug
            - name: KEY
              value: shhh
            - name: SECRET
              value: shhh
            - name: ADMIN_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "directus.fullname" . }}
                  key: admin_email
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}
                  key: admin_password
          livenessProbe:
            httpGet:
              path: /
              port: container
          readinessProbe:
            httpGet:
              path: /
              port: container
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim.directus | default (printf "%s-directus" (include "directus.fullname" . )) }}
